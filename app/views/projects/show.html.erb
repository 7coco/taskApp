<h1><%= @project.title %></h1>
<ul>
  <% @project.tasks.each do |task| %>
    <li>
      <%= check_box_tag '', '', task.done, { 'data-id' => task.id, 'data-project-id' => task.project_id, class: 'done_check' }%>
      <% if task.done == true %>
        <s><%= task.title %></s>
      <% else %>
        <%= task.title %>
      <% end%>
      <% if task.deadline%>
        <%= task.deadline.to_s(:datetime) %>
      <% end %>
      <%= link_to "[Delete]", project_task_path(task.project_id, task.id), method: :delete, data: { confirm: "Are you sure?" } %>
    </li>
  <% end %>
  </li>
  <div id="createTask">
    <%= form_for [@project, @project.tasks.build] do |f| %>
      <%= f.text_field :title %>
      <div id="datetime"><%= f.datetime_local_field :deadline, start_year: 2016 %></div>
      締め切りを設定しない<%= check_box '', '', { id: 'no_deadline' } %>
      <%= f.submit %>
    <% end %>
  </div>
</ul>
<ul id="tasks">
  <select id="sort" v-on:change="sort">
    <option value="updated_before">更新古い順</option>
    <option value="updated_later">更新新しい順</option>
    <option value="created_before">作成古い順</option>
    <option value="created_later">作成新しい順</option>
    <!--option value="near_deadline">締め切り迫ってる順</option-->
    <option value="deadline">締め切り日付順</option>
  </select>
  <li v-for="task in tasks">
    <span v-if="task.done">
      <input type="checkbox" lazy @click="toggle" :data-id="task.id" checked="checked">
    </span>
    <span v-else>
      <input type="checkbox" lazy @click="toggle" :data-id="task.id">
    </span>
    {{ task.title }}
    {{ task.deadline ? task.deadline.replace(/-/g, '/').replace(/T/, ' ').slice(0,16) : ''}}
    {{ task.updated_at }}
    <a @click="deleteTask" :data-id="task.id">[Delete]</a>
  </li>
  <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createTaskModal">Create Task</button>
  <div id="createTaskModal" class="modal fade" role="dialog" aria-labelledby="modalTitle">
    <div class="modal-dialog" role="document">
      <div id="createTask" class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title" id="modalTitle"> Create a New Task</h4>
        </div>
        <div class="modal-body">
          <div class="form-inline">
            <div class="form-group">
              <label for="taskTitle" class="sr-only"></label>
              <input type="text" id="taskTitle" placeholder="Task Title" class="form-control">
            </div>
            <div class="form-group">
              <label for="deadline">締め切り</label>
              <input type="datetime-local" id="deadline" step="300" value="2016-10-28T00:00" class="form-control">
            </div>
            <!-- input type="checkbox" id="no_deadline">
            <label for="no_deadline">締め切りを設定しない</label -->
          </div>
        </div>
        <div class="modal-footer">
          <input type="button" value="Create Task" @click="submitCreateTask">
        </div>
      </div>
    </div>
  </div>
</ul>
<%= javascript_include_tag 'show', 'data-turbolinks-track': 'reload' %>
<script>
$(function(){
  var datetimeForm = $('#datetime');
  $('.done_check').click(function(){
     $.post('/projects/' + $(this).data('project-id') + '/tasks/' + $(this).data('id') + '/toggle');
  });
  var project_id = window.location.pathname.split('/')[2];
  window.fetch('/task_data/' + project_id)
  .then(function(response){
    response.json()
    .then(function(data){
      new Vue({
        el: '#tasks',
        data: {
          tasks: data,
        },
        methods: {
          toggle: function(event){
            $.post('/projects/' + project_id + '/tasks/' + event.target.dataset.id + '/toggle');
          },
          deleteTask: function(event){
            $.ajax({
              type: 'DELETE',
              url: '/projects/' + project_id + '/tasks/' + event.target.dataset.id
            });
          },
          submitCreateTask: function(event){
            $.post('/projects/' + project_id + '/tasks',{ title: $('#taskTitle').val(), deadline: $('#deadline').val(), });
          },
          sort: function(event){
            if(event.target.value === 'updated_before'){
              data.sort(function(taskA,taskB){
                if(taskA.updated_at < taskB.updated_at) return -1;
                if(taskA.updated_at > taskB.updated_at) return 1;
                return 0;
              });
            }else if(event.target.value === 'updated_later'){
              data.sort(function(taskA, taskB){
                if(taskA.updated_at > taskB.updated_at) return -1;
                if(taskA.updated_at < taskB.updated_at) return 1;
                return 0;
              });
            }else if(event.target.value === 'created_before'){
              data.sort(function(taskA, taskB){
                if(taskA.created_at < taskB.created_at) return -1;
                if(taskA.created_at > taskB.created_at) return 1;
                return 0;
              });
            }else if(event.target.value === 'created_later'){
              data.sort(function(taskA, taskB){
                if(taskA.created_at > taskB.created_at) return -1;
                if(taskA.created_at < taskB.created_at) return 1;
                return 0;
              });
            }else if(event.target.value === 'near_deadline'){
              var now = Date().split(' ');
              console.dir(now);
              var nowYear = parseInt(now[3], 10);
              var nowMonth = now[1]
              switch(nowMonth){
                case 'Jun':
                  nowMonth = 1;
                  break;
                case 'Feb':
                  nowMonth = 2;
                  break;
                case 'Mar':
                  nowMonth = 3;
                  break;
                case 'Apl':
                  nowMonth = 4;
                  break;
                case 'May':
                  nowMonth = 5;
                  break;
                case 'Jun':
                  nowMonth = 6;
                  break;
                case 'Jul':
                  nowMonth = 7;
                  break;
                case 'Aug':
                  nowMonth = 8;
                  break;
                case 'Sep':
                  nowMonth = 9;
                  break;
                case 'Oct':
                  nowMonth = 10;
                  break;
                case 'Nov':
                  nowMonth = 11;
                  break;
                case 'Dec':
                  nowMonth = 12;
                  break;
              }
              var nowDay = parseInt(now[2], 10);
              var nowHour = now[4].slice(0, 2);
              var nowMinute = now[4].slice(3, 5);
              var nowSecond = now[4].slice(6, 8);
              data.sort(function(taskA, taskB){
                console.log(taskA.deadline);
                if(taskA.deadline < now || taskA.deadline === null) return 2;
                // if(taskA.deadline)
                // if(taskA.deadline > now) return -1;
                // if(taskA.dealine < now) return 1;
                return 0;
              });
            }else if(event.target.value = 'deadline'){
              data.sort(function(taskA,taskB){
                if(taskA.deadline < taskB.deadline) return -1;
                if(taskA.deadline > taskB.deadline) return 1;
                return 0;
              });
            }
          }
        }
      });
    }).catch(function(err){
      console.log(err);
    });
  });
});

</script>
